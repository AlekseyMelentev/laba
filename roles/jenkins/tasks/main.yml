---
- name: Create jenkins dirs
  file:
    path: "{{item}}"
    state: directory
    mode: '0777'
    recurse: yes
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
  with_items:
    - "{{directory_deploy_jenkins}}"
    - "{{directory_deploy_volumes}}/jenkins/home"
    - "{{directory_deploy_volumes}}/jenkins/jobs/my_job"
  become: true

- name: Upload updateJenkins.sh
  template:
    src: "templates/updateJenkins.sh.j2"
    dest: "{{directory_deploy_jenkins}}/updateJenkins.sh"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
    mode: '0755'

- name: Get docker group info
  getent:
    database: group
    key: docker

- name: Upload Dockerfile
  template:
    src: "templates/Dockerfile.j2"
    dest: "{{directory_deploy_jenkins}}/Dockerfile"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
    mode: '0644'

- name: Upload docker-compose jenkins
  template:
    src: "templates/docker-compose.yml.j2"
    dest: "{{directory_deploy_jenkins}}/docker-compose.yml"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
    mode: '0644'

- name: Upload daemon.json to host
  template:
    src: "templates/daemon.json.j2"
    dest: "/etc/docker/daemon.json"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
    mode: '0644'
  notify: Reload docker
  become: true

- name: Upload daemon.json
  template:
    src: "templates/daemon.json.j2"
    dest: "{{directory_deploy_volumes}}/jenkins/daemon.json"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
    mode: '0644'

- name: Copy config.xml
  copy:
    src: files/config.xml
    dest: "{{directory_deploy_volumes}}/jenkins/jobs/my_job/"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
    mode: '0644'

- name: Execute docker-compose
  command: chdir="{{ directory_deploy_jenkins }}/" docker-compose up -d
  become: true

- name: Upload jenkins.conf final public
  template:
    src: "templates/jenkins.conf.j2"
    dest: "{{directory_deploy_volumes}}/nginx/conf.d/jenkins.conf"
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_group}}"
    mode: '0644'

- name: Restart nginx
  command: "docker restart nginx"
  become: true

- name: Pause play until a URL is reachable from this host
  uri:
    url: "http://{{jenkins_domain}}"
    follow_redirects: none
    method: GET
  register: _result
  until: _result.status == 200
  retries: 30 # 30 * 5 seconds = 150secs
  delay: 5 # Every 5 seconds

- name: Get Jenkins Crumb
  uri:
    url: "http://{{ jenkins_domain }}/crumbIssuer/api/json"
    return_content: yes
  register: crumb_token

- name: Automatically create Jenkins username & password credentials
  uri:
    body: |
      json={
        "": "0",
        "credentials": {
        "scope": "GLOBAL",
        "id": "nexus_creds",
        "username": "admin",
        "password": "admin123",
        "description": "nexus credentials",
        "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
        }
      }
    method: POST
    return_content: true
    body_format: form-urlencoded
    follow_redirects: all
    headers:
      Jenkins-Crumb: "{{ crumb_token.json.crumb }}"
      Cookie: "{{ crumb_token.cookies_string }}"
    url: "http://{{ jenkins_domain }}/credentials/store/system/domain/_/createCredentials"
    validate_certs: false
